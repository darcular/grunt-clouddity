ServerRoot "${APACHE_DIR}"
Listen 80
LogLevel debug
ErrorLog ${APACHE_LOG_DIR}/error.log

LoadModule authn_core_module modules/mod_authn_core.so
LoadModule auth_basic_module modules/mod_auth_basic.so
LoadModule authn_file_module modules/mod_authn_file.so
LoadModule authz_host_module modules/mod_authz_host.so
LoadModule authz_groupfile_module modules/mod_authz_groupfile.so
LoadModule authz_user_module modules/mod_authz_user.so
LoadModule authz_core_module modules/mod_authz_core.so
LoadModule access_compat_module modules/mod_access_compat.so
LoadModule reqtimeout_module modules/mod_reqtimeout.so
LoadModule filter_module modules/mod_filter.so
LoadModule mime_module modules/mod_mime.so
LoadModule log_config_module modules/mod_log_config.so
LoadModule env_module modules/mod_env.so
LoadModule headers_module modules/mod_headers.so
LoadModule setenvif_module modules/mod_setenvif.so
LoadModule version_module modules/mod_version.so
LoadModule unixd_module modules/mod_unixd.so
LoadModule status_module modules/mod_status.so
LoadModule autoindex_module modules/mod_autoindex.so
LoadModule dir_module modules/mod_dir.so
LoadModule alias_module modules/mod_alias.so

LoadModule proxy_module             modules/mod_proxy.so
LoadModule proxy_http_module        modules/mod_proxy_http.so
LoadModule proxy_html_module        modules/mod_proxy_html.so
LoadModule proxy_balancer_module    modules/mod_proxy_balancer.so
LoadModule slotmem_plain_module     modules/mod_slotmem_plain.so
LoadModule slotmem_shm_module       modules/mod_slotmem_shm.so
LoadModule lbmethod_byrequests_module    modules/mod_lbmethod_byrequests.so

# FIXME: how to install the following module?
#LoadModule xml2enc_module           modules/mod_xml2enc.so

<IfModule unixd_module>
  User ${APACHE_RUN_USER}
  Group ${APACHE_RUN_GROUP}
</IfModule>

<IfModule mime_module>
    TypesConfig conf/mime.types
    AddType application/x-compress .Z
    AddType application/x-gzip .gz .tgz
</IfModule>

<IfModule proxy_html_module>
   Include conf/extra/proxy-html.conf
</IfModule>

<IfModule ssl_module>
  SSLRandomSeed startup builtin
  SSLRandomSeed connect builtin
</IfModule>

<VirtualHost *:80>

  <Proxy *>
    AuthType Basic
    AuthName "Authentication Required"
    AuthUserFile ${APACHE_DIR}/conf/htpasswd
    Require valid-user
  </Proxy>

  ProxyRequests Off

  # This to avoid sending the authorization headers to downstream servers
  RequestHeader unset Authorization

  ProxyPass /reg/ http://${CONSULKV_HOST}:${CONSULKV_PORT}/v1/kv/
  ProxyPassReverse /reg/ http://${CONSULKV_HOST}:${CONSULKV_PORT}/v1/kv/

# NOTE: this cofiguration works on a pre-determined number of servers, whose
# names are known in advance

  ProxyPass /wfs balancer://wfscluster/geoserver/aurin/wfs
  ProxyPassReverse /wfs balancer://wfscluster/geoserver/aurin/wfs
  <Proxy balancer://wfscluster>
    BalancerMember http://oa-1-computing:80
    BalancerMember http://oa-2-computing:80
    BalancerMember http://oa-3-computing:80
    ProxySet lbmethod=byrequests
  </Proxy>

  ProxyPass /csw balancer://cswcluster/geoserver/aurin/csw
  ProxyPassReverse /csw balancer://cswcluster/geoserver/aurin/csw
  <Proxy balancer://cswcluster>
    BalancerMember http://oa-1-computing:80
    BalancerMember http://oa-2-computing:80
    BalancerMember http://oa-3-computing:80
    ProxySet lbmethod=byrequests
  </Proxy>

  # Add stickiness to the WPS sessions
  ProxyPass /wps balancer://wpscluster/wps/WebProcessingService stickysession=JSESSIONID|jsessionid scolonpathdelim=On
  ProxyPassReverse /wps balancer://wpscluster/wps/WebProcessingService
  <Proxy balancer://wpscluster>
    BalancerMember http://oa-1-computing:81 route=wpsnode1
    BalancerMember http://oa-2-computing:81 route=wpsnode2
    BalancerMember http://oa-3-computing:81 route=wpsnode3
    ProxySet lbmethod=byrequests
  </Proxy>

</VirtualHost>

